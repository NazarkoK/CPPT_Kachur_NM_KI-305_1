1. **Визначення терміну «виключення»:**
   - Виключення (або помилка) - це ситуація, що виникає під час виконання програми і вказує на помилку або непередбачуваний стан.

2. **Ситуації використання виключень:**
   - Обробка помилок і винятків.
   - Забезпечення нормального виконання програми при виникненні непередбачуваних обставин.

3. **Ієрархія виключень в мові Java:**
   - Всі виключення є підкласами класу `Throwable`. Він має два основних підкласи: `Error` (непоправні помилки, які зазвичай не обробляються програмою) та `Exception` (переважно виняткові ситуації, які можуть бути оброблені програмою).

4. **Створення власного класу виключень:**
   - Створіть клас, що наслідується від `Exception` або його підкласів.

5. **Синтаксис оголошення методів, що можуть генерувати виключення:**
   ```java
   returnType methodName(parameters) throws ExceptionType {
       // тіло методу
   }
   ```

6. **Вказання виключень у заголовках методів:**
   - Вказуйте виключення, якщо метод може генерувати певний тип помилки. Виключення слід вказувати для всіх контрольованих виключень.

7. **Генерація контрольованого виключення:**
   - Створіть об'єкт відповідного класу виключення і використайте оператор `throw`.

8. **Блок `try`:**
   - Блок, в якому розміщується код, який може призвести до виникнення виключення.

9. **Блок `catch`:**
   - Блок, який обробляє виключення, виниклі в блоку `try`. Може бути декілька блоків `catch` для обробки різних типів виключень.

10. **Блок `finally`:**
    - Блок, який завжди виконується, незалежно від того, чи виникло виключення, чи ні. Використовується для звільнення ресурсів чи завершення коду, який повинен виконатися завжди.