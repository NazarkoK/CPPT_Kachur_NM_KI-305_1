1. Дескриптори, які використовуються при коментуванні класів в Java, включають:
   - `@see`: Вказівка на інші класи чи методи, пов'язані з поточним класом.
   - `@author`: Автор класу.
   - `@version`: Версія класу.
   - `@since`: Вказує, з якої версії Java вперше був доступний клас.

2. Дескриптори для коментування методів включають:
   - `@param`: Опис параметрів методу.
   - `@return`: Опис значення, яке повертається методом.
   - `@throws` або `@exception`: Вказує на виняток, який метод може кинути.

3. Для автоматичного створення документації використовуються інструменти, такі як Javadoc. Завдання Javadoc - це вбудований генератор документації для Java, який аналізує коментарі у вихідних файлах і генерує HTML-документацію.

4. Прості типи даних в Java включають:
   - Цілі числа: `byte`, `short`, `int`, `long`.
   - Дійсні числа: `float`, `double`.
   - Логічний тип: `boolean`.
   - Символи: `char`.

5. Для оголошення масиву в Java використовується наступний синтаксис:
   ```java
   тип_даних[] ім'я_масиву;
   ```

6. Керуючі конструкції, підтримувані Java, включають:
   - `if`, `else`: Умовні оператори.
   - `for`, `while`, `do-while`: Цикли.
   - `switch`: Комутатор для обробки багатьох можливих варіантів.

7. Різниця між різними варіантами оператора `for`:
   - `for (ініціалізація; умова; інкремент) { }`: Стандартний `for` з ініціалізацією, умовою та інкрементом.
   - `for (тип_данних змінна : масив) { }`: Розширений `for` для ітерації по елементах масиву чи колекції.

8. Для введення з консолі використовується клас `Scanner`. Приклад:
   ```java
   import java.util.Scanner;

   Scanner scanner = new Scanner(System.in);
   System.out.print("Введіть дані: ");
   String input = scanner.nextLine();
   ```

9. Для введення з текстового файлу також можна використовувати `Scanner`, який приймає `File` як параметр конструктора.

10. Запис у текстовий файл можна виконати, наприклад, за допомогою `BufferedWriter`. Приклад:
    ```java
    import java.io.BufferedWriter;
    import java.io.FileWriter;
    import java.io.IOException;

    BufferedWriter writer = new BufferedWriter(new FileWriter("файл.txt"));
    writer.write("Текст для запису в файл.");
    writer.close();
    ```