1. **Визначення терміну «параметризоване програмування»:**
   - Параметризоване програмування (або generics) - це підхід до програмування, який дозволяє створювати класи, інтерфейси та методи, які можуть працювати з будь-яким типом даних, визначеним користувачем.

2. **Синтаксис визначення простого параметризованого класу:**
   ```java
   public class ParametrizedClass<T> {
       // тіло класу
   }
   ```

3. **Синтаксис створення об’єкту параметризованого класу:**
   ```java
   ParametrizedClass<Integer> obj = new ParametrizedClass<>();
   ```

4. **Синтаксис визначення параметризованого методу:**
   ```java
   public <T> void parametrizedMethod(T parameter) {
       // тіло методу
   }
   ```

5. **Синтаксис виклику параметризованого методу:**
   ```java
   parametrizedMethod("Hello");
   ```

6. **Роль встановлення обмежень для змінних типів:**
   - Обмеження для змінних типів дозволяють вказати, що тип даних повинен відповідати певним критеріям.

7. **Як встановити обмеження для змінних типів:**
   - Використовуйте ключове слово `extends` для встановлення обмежень верхньої межі (upper bound) або `super` для встановлення обмежень нижньої межі (lower bound).

8. **Правила спадкування параметризованих типів:**
   - Параметризовані типи не підлягають автоматичному спадкуванню між ними. Наприклад, `Class<A>` і `Class<B>` не є підтипами один одного, навіть якщо `A` і `B` - підтипи або нащадки одного класу.

9. **Призначення підстановочних типів:**
   - Підстановочні типи (wildcards) використовуються для створення більш гнучких параметризованих методів і класів, які можуть працювати зі змінними типами.

10. **Застосування підстановочних типів:**
    - Використовуються, наприклад, при оголошенні параметрів методів чи колекцій для забезпечення більшої гнучкості і повторного використання коду.